"use client"

import { useState, useEffect } from "react"
import { Card } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Copy, Check, ExternalLink, ChevronDown, ChevronUp, Info, Activity } from "lucide-react"
import { TokenDetails } from "@/app/lib/ave-api-service"
import Image from "next/image"
import { cn } from "@/lib/utils"
import { Skeleton } from "@/components/ui/skeleton"
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip"

interface TokenDetailsCardProps {
  tokenDetails: TokenDetails | null
  isLoading: boolean
  darkMode: boolean
  chain: string
  address: string
}

export default function TokenDetailsCard({ 
  tokenDetails, 
  isLoading, 
  darkMode,
  chain,
  address
}: TokenDetailsCardProps) {
  const [copied, setCopied] = useState(false)
  const [expanded, setExpanded] = useState(false)
  const [enhancedData, setEnhancedData] = useState<any>(null)
  const [isLoadingEnhanced, setIsLoadingEnhanced] = useState(false)
  const [selectedMetricsView, setSelectedMetricsView] = useState<string>("basic") // basic, advanced, social
  
  // 加载状态
  const [loadingStates, setLoadingStates] = useState({
    tokenDetails: false,
    transactions: false,
    holders: false,
    risk: false
  });

  // 增强数据请求成功标志
  const [dataLoadingSuccesses, setDataLoadingSuccesses] = useState({
    tokenDetails: false,
    transactions: false,
    holders: false,
    risk: false
  });
  
  // 确保即使请求失败也不会无限重试
  const [apiRequestAttempted, setApiRequestAttempted] = useState(false);

  // 用于实现延迟的工具函数
  const sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));

  // 按优先级获取所有相关数据的函数
  const fetchAllTokenData = async () => {
    if (!address || !chain || apiRequestAttempted) return;
    
    setApiRequestAttempted(true);
    setIsLoadingEnhanced(true);
    
    try {
      // 首先获取TokenDetails
      setLoadingStates(prev => ({ ...prev, tokenDetails: true }));
      try {
        const detailsResponse = await fetch(`/api/token-details?address=${address}&chain=${chain}`);
        const detailsData = await detailsResponse.json();
        
        if (detailsData.success) {
          // 直接使用完整的API响应作为增强数据
          console.log("获取的代币详情数据:", detailsData);
          setEnhancedData(detailsData);
          setDataLoadingSuccesses(prev => ({ ...prev, tokenDetails: true }));
        }
      } catch (error) {
        console.error("Error fetching token details:", error);
      } finally {
        setLoadingStates(prev => ({ ...prev, tokenDetails: false }));
      }
      
      // 延迟1.5秒后获取交易记录
      await sleep(1500);
      setLoadingStates(prev => ({ ...prev, transactions: true }));
      try {
        const txResponse = await fetch(`/api/token-transactions?address=${address}&chain=${chain}&limit=20`);
        const txData = await txResponse.json();
        
        if (txData.success) {
          // 保存交易数据到增强数据中
          setEnhancedData((prevData: any) => ({
            ...prevData,
            transactions: txData.transactions || []
          }));
          setDataLoadingSuccesses(prev => ({ ...prev, transactions: true }));
        }
      } catch (error) {
        console.error("Error fetching transactions:", error);
      } finally {
        setLoadingStates(prev => ({ ...prev, transactions: false }));
      }
      
      // 再延迟1秒获取持币人数据
      await sleep(1000);
      setLoadingStates(prev => ({ ...prev, holders: true }));
      try {
        const holdersResponse = await fetch(`/api/token-holders?address=${address}&chain=${chain}`);
        const holdersData = await holdersResponse.json();
        
        if (holdersData.success) {
          // 保存持币人数据到增强数据中
          setEnhancedData((prevData: any) => ({
            ...prevData,
            holders: holdersData.holders || []
          }));
          setDataLoadingSuccesses(prev => ({ ...prev, holders: true }));
        }
      } catch (error) {
        console.error("Error fetching holders:", error);
      } finally {
        setLoadingStates(prev => ({ ...prev, holders: false }));
      }
      
      // 最后延迟1秒获取风险数据
      await sleep(1000);
      setLoadingStates(prev => ({ ...prev, risk: true }));
      try {
        const riskResponse = await fetch(`/api/token-risk?address=${address}&chain=${chain}`);
        const riskData = await riskResponse.json();
        
        if (riskData.success) {
          // 保存风险数据到增强数据中
          setEnhancedData((prevData: any) => ({
            ...prevData,
            risk: riskData.risk || {}
          }));
          setDataLoadingSuccesses(prev => ({ ...prev, risk: true }));
        }
      } catch (error) {
        console.error("Error fetching risk data:", error);
      } finally {
        setLoadingStates(prev => ({ ...prev, risk: false }));
      }
      
    } catch (error) {
      console.error("Error in cascaded data fetching:", error);
    } finally {
      setIsLoadingEnhanced(false);
    }
  };

  // 重置所有状态，允许重新获取数据
  const resetAndRetry = () => {
    setApiRequestAttempted(false);
    setDataLoadingSuccesses({
      tokenDetails: false,
      transactions: false,
      holders: false,
      risk: false
    });
    setEnhancedData(null);
    fetchAllTokenData();
  };

  // 当组件展开时获取增强数据
  useEffect(() => {
    if (expanded && !enhancedData && !apiRequestAttempted) {
      fetchAllTokenData();
    }
  }, [expanded, address, chain, enhancedData, apiRequestAttempted]);

  // Format large numbers with K, M, B, T suffixes
  const formatNumber = (num: number) => {
    if (num === undefined || num === null) return "N/A"
    if (num === 0) return "0"

    const suffixes = ["", "K", "M", "B", "T"]
    const magnitude = Math.floor(Math.log10(num) / 3)
    const suffix = suffixes[Math.min(magnitude, suffixes.length - 1)]
    const scaledNum = num / Math.pow(10, magnitude * 3)
    
    return scaledNum.toFixed(1) + suffix
  }

  // Format price to handle small values
  const formatPrice = (price: number) => {
    if (price === undefined || price === null) return "N/A"
    if (price === 0) return "$0.00"
    
    if (price < 0.01) {
      return "$" + price.toFixed(8)
    }
    
    return "$" + price.toLocaleString(undefined, {
      minimumFractionDigits: 2,
      maximumFractionDigits: 2
    })
  }

  // Format percentage change
  const formatPriceChange = (change: number) => {
    if (change === undefined || change === null) return "N/A"
    
    const prefix = change >= 0 ? "+" : ""
    return `${prefix}${change.toFixed(2)}%`
  }

  // Copy address to clipboard
  const copyAddress = () => {
    if (address) {
      navigator.clipboard.writeText(address)
      setCopied(true)
      setTimeout(() => setCopied(false), 2000)
    }
  }

  // Get block explorer URL based on chain
  const getExplorerUrl = () => {
    const baseUrls: {[key: string]: string} = {
      ethereum: "https://etherscan.io/token/",
      bsc: "https://bscscan.com/token/",
      polygon: "https://polygonscan.com/token/",
      arbitrum: "https://arbiscan.io/token/",
      optimism: "https://optimistic.etherscan.io/token/",
      avalanche: "https://snowtrace.io/token/",
      solana: "https://solscan.io/token/",
      base: "https://basescan.org/token/"
    }
    
    return (baseUrls[chain] || "https://etherscan.io/token/") + address
  }

  // 获取代币Logo的函数，尝试多个可能的字段
  const getTokenLogo = () => {
    if (!tokenDetails) return null;
    
    // 尝试多个可能的字段
    const logoUrl = 
      tokenDetails.tokenInfo?.logo_url || 
      tokenDetails.logo ||
      (tokenDetails.tokenInfo as any)?.logo || 
      '';
    
    if (logoUrl && logoUrl.trim() !== '') {
      return logoUrl;
    }
    
    return null;
  }

  // 格式化时间（用于社交链接显示创建时间）
  const formatDate = (timestamp: number) => {
    if (!timestamp) return "N/A";
    
    const date = new Date(timestamp * 1000);
    return date.toLocaleDateString();
  }

  if (isLoading) {
    return (
      <Card className={cn(
        "p-2 w-full animate-pulse",
        darkMode ? "bg-gray-900 border-gray-800" : "bg-white border-gray-200"
      )}>
        <div className="h-6 w-full bg-gray-700 rounded mb-2"></div>
        <div className="grid grid-cols-3 gap-1">
          {[1, 2, 3, 4, 5, 6].map(item => (
            <div key={item} className="h-7 rounded bg-gray-800"></div>
          ))}
        </div>
      </Card>
    )
  }

  // 获取Logo
  const tokenLogo = getTokenLogo();

  // Render loading status in the expanded details
  const renderLoadingStatus = () => {
    if (isLoadingEnhanced) {
      return (
        <div className="mt-2 w-full">
          <div className="flex flex-col gap-1">
            {loadingStates.tokenDetails && (
              <div className="text-[9px] text-center">
                <span className="text-blue-500">正在获取代币详情...</span>
              </div>
            )}
            {loadingStates.transactions && (
              <div className="text-[9px] text-center">
                <span className="text-blue-500">正在获取交易数据...</span>
              </div>
            )}
            {loadingStates.holders && (
              <div className="text-[9px] text-center">
                <span className="text-blue-500">正在获取持币数据...</span>
              </div>
            )}
            {loadingStates.risk && (
              <div className="text-[9px] text-center">
                <span className="text-blue-500">正在获取风险数据...</span>
              </div>
            )}
          </div>
        </div>
      );
    }
    return null;
  };

  // 显示重试按钮
  const renderRetryButton = () => {
    if (apiRequestAttempted && !enhancedData) {
      return (
        <div className="mt-2 w-full flex justify-center">
          <Button
            variant="outline"
            size="sm"
            className="text-[9px] h-6"
            onClick={resetAndRetry}
          >
            重新加载数据
          </Button>
        </div>
      );
    }
    return null;
  };

  return (
    <Card className={cn(
      "p-2 w-full overflow-hidden transition-all",
      darkMode ? "bg-gray-900 border-gray-800" : "bg-white border-gray-200"
    )}>
      {/* Address with copy function */}
      <div className="flex items-center gap-1 mb-2">
        <Button 
          variant="outline" 
          size="sm" 
          className={cn(
            "text-xs h-6 gap-1 flex-grow justify-between truncate max-w-full",
            darkMode ? "bg-gray-800 hover:bg-gray-700" : "bg-gray-100 hover:bg-gray-200"
          )}
          onClick={copyAddress}
        >
          <span className="truncate text-[9px]">
            {address ? address.slice(0, 6) + '...' + address.slice(-4) : "Address unavailable"}
          </span>
          {copied ? (
            <Check className="h-3 w-3 text-green-500 flex-shrink-0" />
          ) : (
            <Copy className="h-3 w-3 text-muted-foreground flex-shrink-0" />
          )}
        </Button>
        <Button 
          variant="outline" 
          size="sm"
          className={cn(
            "w-6 h-6 p-0",
            darkMode ? "bg-gray-800 hover:bg-gray-700" : "bg-gray-100 hover:bg-gray-200"
          )}
          onClick={() => window.open(getExplorerUrl(), '_blank')}
          title="View on explorer"
        >
          <ExternalLink className="h-3 w-3" />
        </Button>
        {/* Expand/Collapse Button */}
        <Button 
          variant="outline" 
          size="sm"
          className={cn(
            "w-6 h-6 p-0",
            darkMode ? "bg-gray-800 hover:bg-gray-700" : "bg-gray-100 hover:bg-gray-200"
          )}
          onClick={() => setExpanded(!expanded)}
          title={expanded ? "Collapse" : "Expand"}
        >
          {expanded ? (
            <ChevronUp className="h-3 w-3" />
          ) : (
            <ChevronDown className="h-3 w-3" />
          )}
        </Button>
      </div>
      
      {/* Token Metrics */}
      <div className="grid grid-cols-3 gap-1">
        <div className={cn(
          "p-1 rounded",
          darkMode ? "bg-gray-800" : "bg-gray-100"
        )}>
          <div className="text-[8px] text-muted-foreground">交易量</div>
          <div className="text-[9px] font-medium">${formatNumber(tokenDetails?.volume24h || 0)}</div>
        </div>
        
        <div className={cn(
          "p-1 rounded",
          darkMode ? "bg-gray-800" : "bg-gray-100"
        )}>
          <div className="text-[8px] text-muted-foreground">市值</div>
          <div className="text-[9px] font-medium">${formatNumber(tokenDetails?.marketCap || 0)}</div>
        </div>
        
        <div className={cn(
          "p-1 rounded",
          darkMode ? "bg-gray-800" : "bg-gray-100"
        )}>
          <div className="text-[8px] text-muted-foreground">总供应量</div>
          <div className="text-[9px] font-medium">{formatNumber(tokenDetails?.totalSupply || 0)}</div>
        </div>
        
        <div className={cn(
          "p-1 rounded",
          darkMode ? "bg-gray-800" : "bg-gray-100"
        )}>
          <div className="text-[8px] text-muted-foreground">持有人数</div>
          <div className="text-[9px] font-medium">{formatNumber(tokenDetails?.holders || 0)}</div>
        </div>
        
        <div className={cn(
          "p-1 rounded",
          darkMode ? "bg-gray-800" : "bg-gray-100"
        )}>
          <div className="text-[8px] text-muted-foreground">流动性</div>
          <div className="text-[9px] font-medium">${formatNumber(tokenDetails?.lpAmount || 0)}</div>
        </div>
        
        <div className={cn(
          "p-1 rounded",
          darkMode ? "bg-gray-800" : "bg-gray-100"
        )}>
          <div className="text-[8px] text-muted-foreground">锁仓比例</div>
          <div className="text-[9px] font-medium">{(tokenDetails?.lockPercent || 0).toFixed(1)}%</div>
        </div>
      </div>

      {/* Expanded Details */}
      {expanded && (
        <div className="mt-2 pt-2 border-t border-gray-700">
          {/* Show loading status */}
          {renderLoadingStatus()}
          
          {/* Metric View Selector */}
          {enhancedData && (
            <div className="flex items-center justify-center gap-1 mb-2">
              <Button 
                variant="outline" 
                size="sm"
                className={cn(
                  "text-[9px] h-6 px-3",
                  selectedMetricsView === "basic" ? 
                    darkMode ? "bg-blue-800 text-white" : "bg-blue-100 text-blue-800" : 
                    darkMode ? "bg-gray-800" : "bg-gray-100"
                )}
                onClick={() => setSelectedMetricsView("basic")}
              >
                基本信息
              </Button>
              <Button 
                variant="outline" 
                size="sm"
                className={cn(
                  "text-[9px] h-6 px-3 flex items-center gap-1",
                  selectedMetricsView === "advanced" ? 
                    darkMode ? "bg-blue-800 text-white" : "bg-blue-100 text-blue-800" : 
                    darkMode ? "bg-gray-800" : "bg-gray-100"
                )}
                onClick={() => setSelectedMetricsView("advanced")}
              >
                高级指标
                <Activity className="h-3 w-3" />
              </Button>
              <Button 
                variant="outline" 
                size="sm"
                className={cn(
                  "text-[9px] h-6 px-3 flex items-center gap-1",
                  selectedMetricsView === "social" ? 
                    darkMode ? "bg-blue-800 text-white" : "bg-blue-100 text-blue-800" : 
                    darkMode ? "bg-gray-800" : "bg-gray-100"
                )}
                onClick={() => setSelectedMetricsView("social")}
              >
                社交信息
                <Info className="h-3 w-3" />
              </Button>
            </div>
          )}
          
          {/* Show retry button if needed */}
          {renderRetryButton()}

          {/* Conditional rendering of different views */}
          {enhancedData && (
            <>
              {/* Basic Information */}
              {selectedMetricsView === "basic" && (
                <div className="grid grid-cols-2 gap-1">
                  <div className={cn(
                    "p-1 rounded",
                    darkMode ? "bg-gray-800" : "bg-gray-100"
                  )}>
                    <div className="text-[8px] text-muted-foreground">代币名称</div>
                    <div className="text-[9px] font-medium">{tokenDetails?.tokenInfo?.name || tokenDetails?.name || enhancedData?.name || "N/A"}</div>
                  </div>
                  
                  <div className={cn(
                    "p-1 rounded",
                    darkMode ? "bg-gray-800" : "bg-gray-100"
                  )}>
                    <div className="text-[8px] text-muted-foreground">代币符号</div>
                    <div className="text-[9px] font-medium">{tokenDetails?.tokenInfo?.symbol || tokenDetails?.symbol || enhancedData?.symbol || "N/A"}</div>
                  </div>
                  
                  <div className={cn(
                    "p-1 rounded",
                    darkMode ? "bg-gray-800" : "bg-gray-100"
                  )}>
                    <div className="text-[8px] text-muted-foreground">所在链</div>
                    <div className="text-[9px] font-medium">{tokenDetails?.chain || enhancedData?.chain || chain.toUpperCase()}</div>
                  </div>
                  
                  <div className={cn(
                    "p-1 rounded",
                    darkMode ? "bg-gray-800" : "bg-gray-100"
                  )}>
                    <div className="text-[8px] text-muted-foreground">当前价格</div>
                    <div className="text-[9px] font-medium">{formatPrice(tokenDetails?.price || enhancedData?.price || 0)}</div>
                  </div>

                  <div className={cn(
                    "p-1 rounded",
                    darkMode ? "bg-gray-800" : "bg-gray-100"
                  )}>
                    <div className="text-[8px] text-muted-foreground">24h涨跌幅</div>
                    <div className={cn(
                      "text-[9px] font-medium",
                      (tokenDetails?.priceChange || enhancedData?.priceChange || 0) >= 0 ? "text-green-500" : "text-red-500"
                    )}>
                      {formatPriceChange(tokenDetails?.priceChange || enhancedData?.priceChange || 0)}
                    </div>
                  </div>

                  <div className={cn(
                    "p-1 rounded",
                    darkMode ? "bg-gray-800" : "bg-gray-100"
                  )}>
                    <div className="text-[8px] text-muted-foreground">创建时间</div>
                    <div className="text-[9px] font-medium">
                      {formatDate(tokenDetails?.created_at || enhancedData?.created_at || 0)}
                    </div>
                  </div>
                  
                  <div className={cn(
                    "p-1 rounded",
                    darkMode ? "bg-gray-800" : "bg-gray-100"
                  )}>
                    <div className="text-[8px] text-muted-foreground">总供应量</div>
                    <div className="text-[9px] font-medium">{formatNumber(tokenDetails?.totalSupply || enhancedData?.totalSupply || 0)}</div>
                  </div>
                  
                  <div className={cn(
                    "p-1 rounded",
                    darkMode ? "bg-gray-800" : "bg-gray-100"
                  )}>
                    <div className="text-[8px] text-muted-foreground">持有人数</div>
                    <div className="text-[9px] font-medium">{formatNumber(tokenDetails?.holders || enhancedData?.holders || 0)}</div>
                  </div>
                  
                  <div className={cn(
                    "p-1 rounded",
                    darkMode ? "bg-gray-800" : "bg-gray-100"
                  )}>
                    <div className="text-[8px] text-muted-foreground">市值</div>
                    <div className="text-[9px] font-medium">${formatNumber(tokenDetails?.marketCap || enhancedData?.marketCap || 0)}</div>
                  </div>
                  
                  <div className={cn(
                    "p-1 rounded",
                    darkMode ? "bg-gray-800" : "bg-gray-100"
                  )}>
                    <div className="text-[8px] text-muted-foreground">合约地址</div>
                    <div className="text-[9px] font-medium truncate">{address?.slice(0, 6) + '...' + address?.slice(-4)}</div>
                  </div>
                  
                  {enhancedData?.burn_amount !== undefined && (
                    <div className={cn(
                      "p-1 rounded",
                      darkMode ? "bg-gray-800" : "bg-gray-100"
                    )}>
                      <div className="text-[8px] text-muted-foreground">燃烧数量</div>
                      <div className="text-[9px] font-medium">{formatNumber(enhancedData?.burn_amount || 0)}</div>
                    </div>
                  )}
                  
                  {enhancedData?.locked_percent !== undefined && (
                    <div className={cn(
                      "p-1 rounded",
                      darkMode ? "bg-gray-800" : "bg-gray-100"
                    )}>
                      <div className="text-[8px] text-muted-foreground">锁仓比例</div>
                      <div className="text-[9px] font-medium">{(enhancedData?.locked_percent || 0).toFixed(6)}%</div>
                    </div>
                  )}
                  
                  {enhancedData?.risk_level !== undefined && (
                    <div className={cn(
                      "p-1 rounded",
                      darkMode ? "bg-gray-800" : "bg-gray-100"
                    )}>
                      <div className="text-[8px] text-muted-foreground">风险等级</div>
                      <div className={cn(
                        "text-[9px] font-medium",
                        enhancedData.risk_level > 2 ? "text-red-500" : 
                        enhancedData.risk_level > 1 ? "text-yellow-500" : "text-green-500"
                      )}>
                        {enhancedData.risk_level}/3
                      </div>
                    </div>
                  )}
                  
                  {enhancedData?.risk_score !== undefined && (
                    <div className={cn(
                      "p-1 rounded",
                      darkMode ? "bg-gray-800" : "bg-gray-100"
                    )}>
                      <div className="text-[8px] text-muted-foreground">风险评分</div>
                      <div className={cn(
                        "text-[9px] font-medium",
                        parseInt(String(enhancedData.risk_score)) > 70 ? "text-red-500" : 
                        parseInt(String(enhancedData.risk_score)) > 30 ? "text-yellow-500" : "text-green-500"
                      )}>
                        {enhancedData.risk_score}/100
                      </div>
                    </div>
                  )}
                </div>
              )}

              {/* Advanced Metrics */}
              {selectedMetricsView === "advanced" && (
                <div className="grid grid-cols-2 gap-1">
                  {isLoadingEnhanced ? (
                    Array(6).fill(0).map((_, i) => (
                      <Skeleton 
                        key={i}
                        className={cn(
                          "p-1 h-11 rounded",
                          darkMode ? "bg-gray-800" : "bg-gray-200"
                        )} 
                      />
                    ))
                  ) : (
                    <>
                      <div className={cn(
                        "p-1 rounded",
                        darkMode ? "bg-gray-800" : "bg-gray-100"
                      )}>
                        <div className="text-[8px] text-muted-foreground">买入税</div>
                        <div className="text-[9px] font-medium">
                          {tokenDetails?.buy_tax !== undefined ? 
                            `${(tokenDetails.buy_tax * 100).toFixed(2)}%` : 
                            enhancedData?.buy_tx ? 
                            `${(parseFloat(String(enhancedData.buy_tx)) * 100).toFixed(2)}%` : 
                            "N/A"}
                        </div>
                      </div>
                      
                      <div className={cn(
                        "p-1 rounded",
                        darkMode ? "bg-gray-800" : "bg-gray-100"
                      )}>
                        <div className="text-[8px] text-muted-foreground">卖出税</div>
                        <div className="text-[9px] font-medium">
                          {tokenDetails?.sell_tax !== undefined ? 
                            `${(tokenDetails.sell_tax * 100).toFixed(2)}%` : 
                            enhancedData?.sell_tx ? 
                            `${(parseFloat(String(enhancedData.sell_tx)) * 100).toFixed(2)}%` : 
                            "N/A"}
                        </div>
                      </div>
                      
                      <div className={cn(
                        "p-1 rounded",
                        darkMode ? "bg-gray-800" : "bg-gray-100"
                      )}>
                        <div className="text-[8px] text-muted-foreground">流通量</div>
                        <div className="text-[9px] font-medium">
                          {formatNumber(tokenDetails?.circulating_supply || 
                            (enhancedData?.circulating_supply ? parseFloat(String(enhancedData.circulating_supply)) : 0))}
                        </div>
                      </div>
                      
                      <div className={cn(
                        "p-1 rounded",
                        darkMode ? "bg-gray-800" : "bg-gray-100"
                      )}>
                        <div className="text-[8px] text-muted-foreground">历史最高价</div>
                        <div className="text-[9px] font-medium">
                          {formatPrice(tokenDetails?.ath || 
                            (enhancedData?.ath ? parseFloat(String(enhancedData.ath)) : 0))}
                        </div>
                      </div>

                      <TooltipProvider>
                        <Tooltip>
                          <TooltipTrigger asChild>
                            <div className={cn(
                              "p-1 rounded",
                              darkMode ? "bg-gray-800" : "bg-gray-100"
                            )}>
                              <div className="text-[8px] text-muted-foreground flex items-center gap-0.5">
                                风险评分
                                <Info className="h-2 w-2 text-muted-foreground" />
                              </div>
                              <div className={cn(
                                "text-[9px] font-medium",
                                (enhancedData?.risk_score && parseInt(String(enhancedData.risk_score)) > 70) ? "text-red-500" :
                                (enhancedData?.risk_score && parseInt(String(enhancedData.risk_score)) > 30) ? "text-yellow-500" :
                                "text-green-500"
                              )}>
                                {tokenDetails?.risk_score ? 
                                  `${tokenDetails.risk_score}/100` : 
                                  enhancedData?.risk_score ?
                                  `${enhancedData.risk_score}/100` :
                                  "未评估"}
                              </div>
                            </div>
                          </TooltipTrigger>
                          <TooltipContent>
                            <p className="text-xs">代币风险评分，数值越高风险越大</p>
                          </TooltipContent>
                        </Tooltip>
                      </TooltipProvider>
                      
                      <div className={cn(
                        "p-1 rounded",
                        darkMode ? "bg-gray-800" : "bg-gray-100"
                      )}>
                        <div className="text-[8px] text-muted-foreground">合约已验证</div>
                        <div className={cn(
                          "text-[9px] font-medium",
                          tokenDetails?.verified || enhancedData?.verified ? "text-green-500" : "text-yellow-500"
                        )}>
                          {tokenDetails?.verified || enhancedData?.verified ? "是" : "否"}
                        </div>
                      </div>
                      
                      {/* 添加大钱包持币情况 */}
                      {enhancedData?.risk?.analysis_big_wallet !== undefined && (
                        <div className={cn(
                          "p-1 rounded",
                          darkMode ? "bg-gray-800" : "bg-gray-100"
                        )}>
                          <div className="text-[8px] text-muted-foreground">大钱包持币</div>
                          <div className={cn(
                            "text-[9px] font-medium",
                            enhancedData.risk.analysis_big_wallet === "1" ? "text-yellow-500" : "text-green-500"
                          )}>
                            {enhancedData.risk.analysis_big_wallet === "1" ? "是" : "否"}
                          </div>
                        </div>
                      )}
                      
                      {/* 添加燃烧LP情况 */}
                      {enhancedData?.risk?.has_not_burned_lp !== undefined && (
                        <div className={cn(
                          "p-1 rounded",
                          darkMode ? "bg-gray-800" : "bg-gray-100"
                        )}>
                          <div className="text-[8px] text-muted-foreground">未燃烧LP</div>
                          <div className={cn(
                            "text-[9px] font-medium",
                            enhancedData.risk.has_not_burned_lp === "1" ? "text-yellow-500" : "text-green-500"
                          )}>
                            {enhancedData.risk.has_not_burned_lp === "1" ? "是" : "否"}
                          </div>
                        </div>
                      )}
                      
                      {/* 添加DEX信息 */}
                      {enhancedData?.risk?.dex !== undefined && (
                        <div className={cn(
                          "p-1 rounded",
                          darkMode ? "bg-gray-800" : "bg-gray-100"
                        )}>
                          <div className="text-[8px] text-muted-foreground">交易所</div>
                          <div className="text-[9px] font-medium">
                            {enhancedData.risk.dex || "N/A"}
                          </div>
                        </div>
                      )}
                      
                      {/* 添加LP数量 */}
                      {enhancedData?.lpAmount !== undefined && (
                        <div className={cn(
                          "p-1 rounded",
                          darkMode ? "bg-gray-800" : "bg-gray-100"
                        )}>
                          <div className="text-[8px] text-muted-foreground">流动性池</div>
                          <div className="text-[9px] font-medium">
                            ${formatNumber(enhancedData.lpAmount)}
                          </div>
                        </div>
                      )}
                      
                      {/* 添加价格ETH */}
                      {enhancedData?.priceEth !== undefined && (
                        <div className={cn(
                          "p-1 rounded",
                          darkMode ? "bg-gray-800" : "bg-gray-100"
                        )}>
                          <div className="text-[8px] text-muted-foreground">ETH价格</div>
                          <div className="text-[9px] font-medium">
                            {(enhancedData.priceEth).toFixed(10)} ETH
                          </div>
                        </div>
                      )}
                    </>
                  )}
                </div>
              )}

              {/* Social Information */}
              {selectedMetricsView === "social" && (
                <div className="grid grid-cols-2 gap-1">
                  {isLoadingEnhanced ? (
                    Array(4).fill(0).map((_, i) => (
                      <Skeleton 
                        key={i}
                        className={cn(
                          "p-1 h-11 rounded",
                          darkMode ? "bg-gray-800" : "bg-gray-200"
                        )} 
                      />
                    ))
                  ) : (
                    <>
                      <div className={cn(
                        "p-1 rounded",
                        darkMode ? "bg-gray-800" : "bg-gray-100"
                      )}>
                        <div className="text-[8px] text-muted-foreground">网站</div>
                        <div className="text-[9px] font-medium truncate">
                          {tokenDetails?.website || enhancedData?.website ? (
                            <a 
                              href={tokenDetails?.website || enhancedData?.website} 
                              target="_blank" 
                              rel="noopener noreferrer" 
                              className="text-blue-500 hover:underline truncate block"
                            >
                              {((tokenDetails?.website || enhancedData?.website) || "").replace(/https?:\/\//i, '').slice(0, 15)}...
                            </a>
                          ) : "N/A"}
                        </div>
                      </div>
                      
                      <div className={cn(
                        "p-1 rounded",
                        darkMode ? "bg-gray-800" : "bg-gray-100"
                      )}>
                        <div className="text-[8px] text-muted-foreground">Twitter</div>
                        <div className="text-[9px] font-medium">
                          {tokenDetails?.twitter || enhancedData?.twitter ? (
                            <a 
                              href={tokenDetails?.twitter || enhancedData?.twitter} 
                              target="_blank" 
                              rel="noopener noreferrer" 
                              className="text-blue-500 hover:underline"
                            >
                              查看
                            </a>
                          ) : "N/A"}
                        </div>
                      </div>
                      
                      <div className={cn(
                        "p-1 rounded",
                        darkMode ? "bg-gray-800" : "bg-gray-100"
                      )}>
                        <div className="text-[8px] text-muted-foreground">Telegram</div>
                        <div className="text-[9px] font-medium">
                          {tokenDetails?.telegram || enhancedData?.telegram ? (
                            <a 
                              href={tokenDetails?.telegram || enhancedData?.telegram} 
                              target="_blank" 
                              rel="noopener noreferrer" 
                              className="text-blue-500 hover:underline"
                            >
                              查看
                            </a>
                          ) : "N/A"}
                        </div>
                      </div>
                      
                      <div className={cn(
                        "p-1 rounded",
                        darkMode ? "bg-gray-800" : "bg-gray-100"
                      )}>
                        <div className="text-[8px] text-muted-foreground">Discord</div>
                        <div className="text-[9px] font-medium">
                          {enhancedData?.discord ? (
                            <a 
                              href={enhancedData.discord} 
                              target="_blank" 
                              rel="noopener noreferrer" 
                              className="text-blue-500 hover:underline"
                            >
                              查看
                            </a>
                          ) : "N/A"}
                        </div>
                      </div>

                      {/* GitHub */}
                      {enhancedData?.github && (
                        <div className={cn(
                          "p-1 rounded",
                          darkMode ? "bg-gray-800" : "bg-gray-100"
                        )}>
                          <div className="text-[8px] text-muted-foreground">GitHub</div>
                          <div className="text-[9px] font-medium">
                            <a 
                              href={enhancedData.github} 
                              target="_blank" 
                              rel="noopener noreferrer" 
                              className="text-blue-500 hover:underline"
                            >
                              查看
                            </a>
                          </div>
                        </div>
                      )}
                      
                      {/* Medium/Blog */}
                      {(enhancedData?.blog || enhancedData?.medium) && (
                        <div className={cn(
                          "p-1 rounded",
                          darkMode ? "bg-gray-800" : "bg-gray-100"
                        )}>
                          <div className="text-[8px] text-muted-foreground">博客</div>
                          <div className="text-[9px] font-medium">
                            <a 
                              href={enhancedData.blog || enhancedData.medium} 
                              target="_blank" 
                              rel="noopener noreferrer" 
                              className="text-blue-500 hover:underline"
                            >
                              查看
                            </a>
                          </div>
                        </div>
                      )}
                      
                      {/* Reddit */}
                      {enhancedData?.reddit && (
                        <div className={cn(
                          "p-1 rounded",
                          darkMode ? "bg-gray-800" : "bg-gray-100"
                        )}>
                          <div className="text-[8px] text-muted-foreground">Reddit</div>
                          <div className="text-[9px] font-medium">
                            <a 
                              href={enhancedData.reddit} 
                              target="_blank" 
                              rel="noopener noreferrer" 
                              className="text-blue-500 hover:underline"
                            >
                              查看
                            </a>
                          </div>
                        </div>
                      )}
                      
                      {/* 白皮书 */}
                      {enhancedData?.whitepaper && (
                        <div className={cn(
                          "p-1 rounded",
                          darkMode ? "bg-gray-800" : "bg-gray-100"
                        )}>
                          <div className="text-[8px] text-muted-foreground">白皮书</div>
                          <div className="text-[9px] font-medium">
                            <a 
                              href={enhancedData.whitepaper} 
                              target="_blank" 
                              rel="noopener noreferrer" 
                              className="text-blue-500 hover:underline"
                            >
                              查看
                            </a>
                          </div>
                        </div>
                      )}
                      
                      {/* 显示代币描述 */}
                      {enhancedData?.description && (
                        <div className={cn(
                          "p-1 rounded col-span-2",
                          darkMode ? "bg-gray-800" : "bg-gray-100"
                        )}>
                          <div className="text-[8px] text-muted-foreground">代币描述</div>
                          <div className="text-[9px] font-medium max-h-20 overflow-y-auto">
                            {enhancedData.description}
                          </div>
                        </div>
                      )}
                    </>
                  )}
                </div>
              )}
            </>
          )}
        </div>
      )}
    </Card>
  )
} 